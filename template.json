{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "defaultValue":"POC_AKS",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of the Managed Cluster resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "linuxAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Linux Virtual Machines."
            }
        },
        "sshRSAPublicKey": {
            "type": "string",
            "metadata": {
                "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
            }
        },
        "tenantID": {
            "type": "string",
            "metadata": {
                "description": "Tenant ID of AAD"
            }
        },  
        "enableRBAC": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },      
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "defaultValue": "1.18.2",
            "type": "string",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Project": "Demo"
            }
        },
        "omsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "OMS log analytics workspace name"
            }
        },
        "omsServiceTier": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Free",
                "Standalone",
                "PerNode"
            ],
            "metadata": {
                "description": "OMS log analytics service tier: Free, Standalone, or PerNode"
            }
        },
        "omsDataRetention": {
            "type": "int",
            "defaultValue": 7,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "OMS log analytics number of days of retention. Free plans can only have 7 days, Standalone and OMS plans include 30 days for free"
            }
        }
    },
    "variables": {
      "apiVersion": {
            "oms": "2017-03-15-preview",
            "omssolutions": "2015-11-01-preview",
            "automation": "2015-10-31"
        },
        "updates": {
            "name": "[concat('Updates', '(', parameters('omsWorkspaceName'), ')')]",
            "galleryName": "Updates"
        }
    },
    "resources": [
        {
            "apiVersion": "2020-03-01",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('clusterName')]",
            "tags": "[parameters('resourceTags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",                
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "kubeletDiskType": "OS"
                    }
                ],
                "networkProfile": {
                    "networkPlugin": "kubenet",
                    "loadBalancerSku": "Standard",
                    "outboundType": "loadBalancer"
                },
                "aadProfile": {
                    "managed": true,
                    "adminGroupObjectIDs": [],
                    "enableAzureRBAC": false,
                    "tenantID": "[parameters('tenantID')]"
                },
                "linuxProfile": {
                    "adminUsername": "[parameters('linuxAdminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('sshRSAPublicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": {
                    "clientId": "msi"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion').oms]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[parameters('omsWorkspaceName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "Name": "[parameters('omsServiceTier')]"
                },
                "retention": "[parameters('omsDataRetention')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion').omssolutions]",
                    "location": "[resourceGroup().location]",
                    "name": "[variables('updates').name]",
                    "type": "Microsoft.OperationsManagement/solutions",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/', variables('updates').name)]",
                    "dependsOn": [
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]"
                    ],
                    "properties": {
                        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]"
                    },
                    "plan": {
                        "name": "[variables('updates').name]",
                        "publisher": "Microsoft",
                        "promotionCode": "",
                        "product": "[concat('OMSGallery/', variables('updates').galleryName)]"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))).fqdn]"
        }
    }
}